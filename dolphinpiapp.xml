<?xml version="1.0" encoding="UTF-8"?>
<project name="dolphinpiapp" default="all">
  
  
  <property file="dolphinpiapp.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <include name="**/?*.properties"/>
    <include name="**/?*.txt"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/access-bridge-64.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.asm-3.3.1.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/asm/asm/3.3.1/jar/1d5f20b4ea675e6fab6ab79f1cd60ec268ddc015/asm-3.3.1.jar"/>
  </path>
  
  <path id="library.commons-codec-1.6.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/commons-codec/commons-codec/1.6/jar/b7f0fc8f61ecadeb3695f0b9464755eee44374d4/commons-codec-1.6.jar"/>
  </path>
  
  <path id="library.commons-logging-1.1.1.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/commons-logging/commons-logging/1.1.1/jar/5043bfebc3db072ed80fbd362e7caf00e885d8ae/commons-logging-1.1.1.jar"/>
  </path>
  
  <path id="library.dolphin-client-0.7.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.open-dolphin/dolphin-client/0.7/jar/286728dcdcfbd94c4c0e98a560e3acfc20489517/dolphin-client-0.7.jar"/>
  </path>
  
  <path id="library.dolphin-client-javafx-0.7.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.open-dolphin/dolphin-client-javafx/0.7/jar/db6d996f027f0ba795a3ed78abbe430812e37136/dolphin-client-javafx-0.7.jar"/>
  </path>
  
  <path id="library.dolphin-combined-0.7.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.open-dolphin/dolphin-combined/0.7/jar/7b8593592867e5aad35ec6e1224453c31321411a/dolphin-combined-0.7.jar"/>
  </path>
  
  <path id="library.dolphin-server-0.7.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.open-dolphin/dolphin-server/0.7/jar/42e717b3d701166455b52959ca836981f6ffe252/dolphin-server-0.7.jar"/>
  </path>
  
  <path id="library.dolphin-shared-0.7.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.open-dolphin/dolphin-shared/0.7/jar/f44481d6c613b412ce5729084e3fff96294de983/dolphin-shared-0.7.jar"/>
  </path>
  
  <path id="library.gpars-1.0.0.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.codehaus.gpars/gpars/1.0.0/jar/3c163b890382e0ca8ffe22e96fae2dc896af9b1f/gpars-1.0.0.jar"/>
  </path>
  
  <path id="library.groovy-all-2.1.2.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.codehaus.groovy/groovy-all/2.1.2/jar/ab1bf16086fc19709b3ca335bc4eafaedc742dc0/groovy-all-2.1.2.jar"/>
  </path>
  
  <path id="library.groovyfx-0.2.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.codehaus.groovyfx/groovyfx/0.2/jar/3ee0623d42d491e41762967804696ef03020fee9/groovyfx-0.2.jar"/>
  </path>
  
  <path id="library.hamcrest-core-1.3.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.hamcrest/hamcrest-core/1.3/jar/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar"/>
  </path>
  
  <path id="library.httpclient-4.2.1.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.apache.httpcomponents/httpclient/4.2.1/jar/b69bd03af60bf487b3ae1209a644ecac587bf6fc/httpclient-4.2.1.jar"/>
  </path>
  
  <path id="library.httpcore-4.2.1.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.apache.httpcomponents/httpcore/4.2.1/jar/2d503272bf0a8b5f92d64db78b4ba9abbaccc6fd/httpcore-4.2.1.jar"/>
  </path>
  
  <path id="library.jfxrt.classpath">
    <pathelement location="${basedir}/../../../Program Files/Java/jdk1.7.0_25/jre/lib/jfxrt.jar"/>
  </path>
  
  <path id="library.jfxtras-labs.classpath">
    <pathelement location="${basedir}/_localrepository/jfxtras-labs.jar"/>
  </path>
  
  <path id="library.jsr166y-1.7.0.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/org.codehaus.jsr166-mirror/jsr166y/1.7.0/jar/8547fcb1c29b4f8c745c3f49a536aca58fc30f54/jsr166y-1.7.0.jar"/>
  </path>
  
  <path id="library.junit-4.11.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/junit/junit/4.11/jar/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar"/>
  </path>
  
  <path id="library.miglayout-core-4.2.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/com.miglayout/miglayout-core/4.2/jar/70f2bfa2a077ee1632cc8229deffa1d942825c78/miglayout-core-4.2.jar"/>
  </path>
  
  <path id="library.miglayout-javafx-4.2.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/com.miglayout/miglayout-javafx/4.2/jar/f794259670bd80ee183f3e574c62936b8b6c20df/miglayout-javafx-4.2.jar"/>
  </path>
  
  <path id="library.servlet-api-2.5.classpath">
    <pathelement location="${basedir}/../.gradle/caches/artifacts-23/filestore/javax.servlet/servlet-api/2.5/jar/5959582d97d8b61f4d154ca9e495aafd16726e34/servlet-api-2.5.jar"/>
  </path>
  
  <path id="library.swing-layout-1.0.4.classpath">
    <pathelement location="${basedir}/_localrepository/swing-layout-1.0.4.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm4-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
    <property name="grooovyc.task.sdk" value="library.groovy-all-2.1.2.classpath"/>
    <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="${grooovyc.task.sdk}"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module shared -->
  
  <dirname property="module.shared.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.shared" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.shared" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.shared" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.shared" value="${compiler.args}"/>
  
  <property name="shared.output.dir" value="${module.shared.basedir}/classes/production/shared"/>
  <property name="shared.testoutput.dir" value="${module.shared.basedir}/classes/test/shared"/>
  
  <path id="shared.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="shared.module.production.classpath">
    <path refid="${module.jdk.classpath.shared}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
  </path>
  
  <path id="shared.runtime.production.module.classpath">
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
  </path>
  
  <path id="shared.module.classpath">
    <path refid="${module.jdk.classpath.shared}"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
  </path>
  
  <path id="shared.runtime.module.classpath">
    <pathelement location="${shared.testoutput.dir}"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.shared">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.shared">
    <patternset refid="excluded.from.module.shared"/>
  </patternset>
  
  <path id="shared.module.sourcepath">
    <dirset dir="${module.shared.basedir}/shared">
      <include name="src/main/java"/>
      <include name="src/main/groovy"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.shared" depends="compile.module.shared.production,compile.module.shared.tests" description="Compile module shared"/>
  
  <target name="compile.module.shared.production" depends="register.custom.compilers" description="Compile module shared; production classes">
    <mkdir dir="${shared.output.dir}"/>
    <groovyc destdir="${shared.output.dir}" fork="yes">
      <src refid="shared.module.sourcepath"/>
      <classpath refid="shared.module.production.classpath"/>
      <patternset refid="excluded.from.compilation.shared"/>
      <javac debug="${compiler.debug}">
        <compilerarg line="${compiler.args.shared}"/>
      </javac>
    </groovyc>
    <instrumentIdeaExtensions destdir="${shared.output.dir}">
      <compilerarg line="${compiler.args.shared}"/>
      <bootclasspath refid="shared.module.bootclasspath"/>
      <classpath refid="shared.module.production.classpath"/>
      <src refid="shared.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.shared"/>
    </instrumentIdeaExtensions>
    
    <copy todir="${shared.output.dir}">
      <fileset dir="${module.shared.basedir}/shared/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.shared.basedir}/shared/src/main/groovy">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.shared.basedir}/shared/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.shared.tests" depends="register.custom.compilers,compile.module.shared.production" description="compile module shared; test classes" unless="skip.tests"/>
  
  <target name="clean.module.shared" description="cleanup module">
    <delete dir="${shared.output.dir}"/>
    <delete dir="${shared.testoutput.dir}"/>
  </target>
  
  
  <!-- Module client -->
  
  <dirname property="module.client.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.client" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.client" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.client" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.client" value="${compiler.args}"/>
  
  <property name="client.output.dir" value="${module.client.basedir}/classes/production/client"/>
  <property name="client.testoutput.dir" value="${module.client.basedir}/classes/test/client"/>
  
  <path id="client.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="client.module.production.classpath">
    <path refid="${module.jdk.classpath.client}"/>
    <path refid="library.jfxtras-labs.classpath"/>
    <path refid="library.jfxrt.classpath"/>
    <path refid="library.swing-layout-1.0.4.classpath"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.httpcore-4.2.1.classpath"/>
    <path refid="library.httpclient-4.2.1.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.miglayout-javafx-4.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.miglayout-core-4.2.classpath"/>
    <path refid="library.groovyfx-0.2.classpath"/>
    <path refid="library.dolphin-client-0.7.classpath"/>
    <path refid="library.dolphin-client-javafx-0.7.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.commons-logging-1.1.1.classpath"/>
    <path refid="library.commons-codec-1.6.classpath"/>
    <path refid="library.asm-3.3.1.classpath"/>
  </path>
  
  <path id="client.runtime.production.module.classpath">
    <pathelement location="${client.output.dir}"/>
    <path refid="library.jfxtras-labs.classpath"/>
    <path refid="library.jfxrt.classpath"/>
    <path refid="library.swing-layout-1.0.4.classpath"/>
    <path refid="shared.runtime.production.module.classpath"/>
    <path refid="library.httpcore-4.2.1.classpath"/>
    <path refid="library.httpclient-4.2.1.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.miglayout-javafx-4.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.miglayout-core-4.2.classpath"/>
    <path refid="library.groovyfx-0.2.classpath"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.dolphin-client-0.7.classpath"/>
    <path refid="library.dolphin-client-javafx-0.7.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.commons-logging-1.1.1.classpath"/>
    <path refid="library.commons-codec-1.6.classpath"/>
    <path refid="library.asm-3.3.1.classpath"/>
  </path>
  
  <path id="client.module.classpath">
    <path refid="${module.jdk.classpath.client}"/>
    <pathelement location="${client.output.dir}"/>
    <path refid="library.jfxtras-labs.classpath"/>
    <path refid="library.jfxrt.classpath"/>
    <path refid="library.swing-layout-1.0.4.classpath"/>
    <pathelement location="${shared.testoutput.dir}"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.httpcore-4.2.1.classpath"/>
    <path refid="library.httpclient-4.2.1.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.miglayout-javafx-4.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.miglayout-core-4.2.classpath"/>
    <path refid="library.groovyfx-0.2.classpath"/>
    <path refid="library.dolphin-client-0.7.classpath"/>
    <path refid="library.dolphin-client-javafx-0.7.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.commons-logging-1.1.1.classpath"/>
    <path refid="library.commons-codec-1.6.classpath"/>
    <path refid="library.asm-3.3.1.classpath"/>
  </path>
  
  <path id="client.runtime.module.classpath">
    <pathelement location="${client.testoutput.dir}"/>
    <pathelement location="${client.output.dir}"/>
    <path refid="library.jfxtras-labs.classpath"/>
    <path refid="library.jfxrt.classpath"/>
    <path refid="library.swing-layout-1.0.4.classpath"/>
    <path refid="shared.runtime.module.classpath"/>
    <path refid="library.httpcore-4.2.1.classpath"/>
    <path refid="library.httpclient-4.2.1.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.miglayout-javafx-4.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.miglayout-core-4.2.classpath"/>
    <path refid="library.groovyfx-0.2.classpath"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.dolphin-client-0.7.classpath"/>
    <path refid="library.dolphin-client-javafx-0.7.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.commons-logging-1.1.1.classpath"/>
    <path refid="library.commons-codec-1.6.classpath"/>
    <path refid="library.asm-3.3.1.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.client">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.client">
    <patternset refid="excluded.from.module.client"/>
  </patternset>
  
  <path id="client.module.sourcepath">
    <dirset dir="${module.client.basedir}/client">
      <include name="src/main/resources"/>
      <include name="src/main/groovy"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.client" depends="compile.module.client.production,compile.module.client.tests" description="Compile module client"/>
  
  <target name="compile.module.client.production" depends="register.custom.compilers,compile.module.shared" description="Compile module client; production classes">
    <mkdir dir="${client.output.dir}"/>
    <groovyc destdir="${client.output.dir}" fork="yes">
      <src refid="client.module.sourcepath"/>
      <classpath refid="client.module.production.classpath"/>
      <patternset refid="excluded.from.compilation.client"/>
      <javac debug="${compiler.debug}">
        <compilerarg line="${compiler.args.client}"/>
      </javac>
    </groovyc>
    <instrumentIdeaExtensions destdir="${client.output.dir}">
      <compilerarg line="${compiler.args.client}"/>
      <bootclasspath refid="client.module.bootclasspath"/>
      <classpath refid="client.module.production.classpath"/>
      <src refid="client.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.client"/>
    </instrumentIdeaExtensions>
    
    <copy todir="${client.output.dir}">
      <fileset dir="${module.client.basedir}/client/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.client.basedir}/client/src/main/groovy">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.client.tests" depends="register.custom.compilers,compile.module.client.production" description="compile module client; test classes" unless="skip.tests"/>
  
  <target name="clean.module.client" description="cleanup module">
    <delete dir="${client.output.dir}"/>
    <delete dir="${client.testoutput.dir}"/>
  </target>
  
  
  <!-- Module server -->
  
  <dirname property="module.server.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.server" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.server" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.server" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.server" value="${compiler.args}"/>
  
  <property name="server.output.dir" value="${module.server.basedir}/classes/production/server"/>
  <property name="server.testoutput.dir" value="${module.server.basedir}/classes/test/server"/>
  
  <path id="server.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="server.module.production.classpath">
    <path refid="${module.jdk.classpath.server}"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
  </path>
  
  <path id="server.runtime.production.module.classpath">
    <pathelement location="${server.output.dir}"/>
    <path refid="shared.runtime.production.module.classpath"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
  </path>
  
  <path id="server.module.classpath">
    <path refid="${module.jdk.classpath.server}"/>
    <pathelement location="${server.output.dir}"/>
    <pathelement location="${shared.testoutput.dir}"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
  </path>
  
  <path id="server.runtime.module.classpath">
    <pathelement location="${server.testoutput.dir}"/>
    <pathelement location="${server.output.dir}"/>
    <path refid="shared.runtime.module.classpath"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.server">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.server">
    <patternset refid="excluded.from.module.server"/>
  </patternset>
  
  <path id="server.module.sourcepath">
    <dirset dir="${module.server.basedir}/server">
      <include name="src/main/groovy"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  <path id="server.module.test.sourcepath">
    <dirset dir="${module.server.basedir}/server">
      <include name="src/test/groovy"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.server" depends="compile.module.server.production,compile.module.server.tests" description="Compile module server"/>
  
  <target name="compile.module.server.production" depends="register.custom.compilers,compile.module.shared" description="Compile module server; production classes">
    <mkdir dir="${server.output.dir}"/>
    <groovyc destdir="${server.output.dir}" fork="yes">
      <src refid="server.module.sourcepath"/>
      <classpath refid="server.module.production.classpath"/>
      <patternset refid="excluded.from.compilation.server"/>
      <javac debug="${compiler.debug}">
        <compilerarg line="${compiler.args.server}"/>
      </javac>
    </groovyc>
    <instrumentIdeaExtensions destdir="${server.output.dir}">
      <compilerarg line="${compiler.args.server}"/>
      <bootclasspath refid="server.module.bootclasspath"/>
      <classpath refid="server.module.production.classpath"/>
      <src refid="server.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.server"/>
    </instrumentIdeaExtensions>
    
    <copy todir="${server.output.dir}">
      <fileset dir="${module.server.basedir}/server/src/main/groovy">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.server.basedir}/server/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.server.tests" depends="register.custom.compilers,compile.module.server.production" description="compile module server; test classes" unless="skip.tests">
    <mkdir dir="${server.testoutput.dir}"/>
    <groovyc destdir="${server.testoutput.dir}" fork="yes">
      <src refid="server.module.test.sourcepath"/>
      <classpath refid="server.module.classpath"/>
      <patternset refid="excluded.from.compilation.server"/>
      <javac debug="${compiler.debug}">
        <compilerarg line="${compiler.args.server}"/>
      </javac>
    </groovyc>
    <instrumentIdeaExtensions destdir="${server.testoutput.dir}">
      <compilerarg line="${compiler.args.server}"/>
      <bootclasspath refid="server.module.bootclasspath"/>
      <classpath refid="server.module.classpath"/>
      <src refid="server.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.server"/>
    </instrumentIdeaExtensions>
    
    <copy todir="${server.testoutput.dir}">
      <fileset dir="${module.server.basedir}/server/src/test/groovy">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.server" description="cleanup module">
    <delete dir="${server.output.dir}"/>
    <delete dir="${server.testoutput.dir}"/>
  </target>
  
  
  <!-- Module combined -->
  
  <dirname property="module.combined.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.combined" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.combined" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.combined" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.combined" value="${compiler.args}"/>
  
  <property name="combined.output.dir" value="${module.combined.basedir}/classes/production/combined"/>
  <property name="combined.testoutput.dir" value="${module.combined.basedir}/classes/test/combined"/>
  
  <path id="combined.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="combined.module.production.classpath">
    <path refid="${module.jdk.classpath.combined}"/>
    <pathelement location="${client.output.dir}"/>
    <path refid="library.jfxtras-labs.classpath"/>
    <path refid="library.jfxrt.classpath"/>
    <path refid="library.swing-layout-1.0.4.classpath"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.httpcore-4.2.1.classpath"/>
    <path refid="library.httpclient-4.2.1.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.miglayout-javafx-4.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.miglayout-core-4.2.classpath"/>
    <path refid="library.groovyfx-0.2.classpath"/>
    <path refid="library.dolphin-client-0.7.classpath"/>
    <path refid="library.dolphin-client-javafx-0.7.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.commons-logging-1.1.1.classpath"/>
    <path refid="library.commons-codec-1.6.classpath"/>
    <path refid="library.asm-3.3.1.classpath"/>
    <pathelement location="${server.output.dir}"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
    <path refid="library.dolphin-combined-0.7.classpath"/>
  </path>
  
  <path id="combined.runtime.production.module.classpath">
    <pathelement location="${combined.output.dir}"/>
    <path refid="client.runtime.production.module.classpath"/>
    <path refid="server.runtime.production.module.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.httpcore-4.2.1.classpath"/>
    <path refid="library.commons-codec-1.6.classpath"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.commons-logging-1.1.1.classpath"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.dolphin-combined-0.7.classpath"/>
    <path refid="library.dolphin-client-0.7.classpath"/>
    <path refid="library.httpclient-4.2.1.classpath"/>
  </path>
  
  <path id="combined.module.classpath">
    <path refid="${module.jdk.classpath.combined}"/>
    <pathelement location="${combined.output.dir}"/>
    <pathelement location="${client.testoutput.dir}"/>
    <pathelement location="${client.output.dir}"/>
    <path refid="library.jfxtras-labs.classpath"/>
    <path refid="library.jfxrt.classpath"/>
    <path refid="library.swing-layout-1.0.4.classpath"/>
    <pathelement location="${shared.testoutput.dir}"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.httpcore-4.2.1.classpath"/>
    <path refid="library.httpclient-4.2.1.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.miglayout-javafx-4.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.miglayout-core-4.2.classpath"/>
    <path refid="library.groovyfx-0.2.classpath"/>
    <path refid="library.dolphin-client-0.7.classpath"/>
    <path refid="library.dolphin-client-javafx-0.7.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.commons-logging-1.1.1.classpath"/>
    <path refid="library.commons-codec-1.6.classpath"/>
    <path refid="library.asm-3.3.1.classpath"/>
    <pathelement location="${server.testoutput.dir}"/>
    <pathelement location="${server.output.dir}"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
    <path refid="library.dolphin-combined-0.7.classpath"/>
  </path>
  
  <path id="combined.runtime.module.classpath">
    <pathelement location="${combined.testoutput.dir}"/>
    <pathelement location="${combined.output.dir}"/>
    <path refid="client.runtime.module.classpath"/>
    <path refid="server.runtime.module.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.httpcore-4.2.1.classpath"/>
    <path refid="library.commons-codec-1.6.classpath"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.commons-logging-1.1.1.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.dolphin-combined-0.7.classpath"/>
    <path refid="library.dolphin-client-0.7.classpath"/>
    <path refid="library.httpclient-4.2.1.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.combined">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.combined">
    <patternset refid="excluded.from.module.combined"/>
  </patternset>
  
  <path id="combined.module.sourcepath">
    <dirset dir="${module.combined.basedir}/combined">
      <include name="src/main/groovy"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.combined" depends="compile.module.combined.production,compile.module.combined.tests" description="Compile module combined"/>
  
  <target name="compile.module.combined.production" depends="register.custom.compilers,compile.module.client,compile.module.server" description="Compile module combined; production classes">
    <mkdir dir="${combined.output.dir}"/>
    <groovyc destdir="${combined.output.dir}" fork="yes">
      <src refid="combined.module.sourcepath"/>
      <classpath refid="combined.module.production.classpath"/>
      <patternset refid="excluded.from.compilation.combined"/>
      <javac debug="${compiler.debug}">
        <compilerarg line="${compiler.args.combined}"/>
      </javac>
    </groovyc>
    <instrumentIdeaExtensions destdir="${combined.output.dir}">
      <compilerarg line="${compiler.args.combined}"/>
      <bootclasspath refid="combined.module.bootclasspath"/>
      <classpath refid="combined.module.production.classpath"/>
      <src refid="combined.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.combined"/>
    </instrumentIdeaExtensions>
    
    <copy todir="${combined.output.dir}">
      <fileset dir="${module.combined.basedir}/combined/src/main/groovy">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.combined.tests" depends="register.custom.compilers,compile.module.combined.production" description="compile module combined; test classes" unless="skip.tests"/>
  
  <target name="clean.module.combined" description="cleanup module">
    <delete dir="${combined.output.dir}"/>
    <delete dir="${combined.testoutput.dir}"/>
  </target>
  
  
  <!-- Module server-app -->
  
  <dirname property="module.server-app.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.server-app" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.server-app" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.server-app" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.server-app" value="${compiler.args}"/>
  
  <property name="server-app.output.dir" value="${module.server-app.basedir}/classes/production/server-app"/>
  <property name="server-app.testoutput.dir" value="${module.server-app.basedir}/classes/test/server-app"/>
  
  <path id="server-app.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="server-app.module.production.classpath">
    <path refid="${module.jdk.classpath.server-app}"/>
    <pathelement location="${server.output.dir}"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
  </path>
  
  <path id="server-app.runtime.production.module.classpath">
    <pathelement location="${server-app.output.dir}"/>
    <path refid="server.runtime.production.module.classpath"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
  </path>
  
  <path id="server-app.module.classpath">
    <path refid="${module.jdk.classpath.server-app}"/>
    <pathelement location="${server-app.output.dir}"/>
    <pathelement location="${server.testoutput.dir}"/>
    <pathelement location="${server.output.dir}"/>
    <pathelement location="${shared.testoutput.dir}"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
  </path>
  
  <path id="server-app.runtime.module.classpath">
    <pathelement location="${server-app.testoutput.dir}"/>
    <pathelement location="${server-app.output.dir}"/>
    <path refid="server.runtime.module.classpath"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.server-app">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.server-app">
    <patternset refid="excluded.from.module.server-app"/>
  </patternset>
  
  
  <target name="compile.module.server-app" depends="compile.module.server-app.production,compile.module.server-app.tests" description="Compile module server-app"/>
  
  <target name="compile.module.server-app.production" depends="register.custom.compilers,compile.module.server" description="Compile module server-app; production classes"/>
  
  <target name="compile.module.server-app.tests" depends="register.custom.compilers,compile.module.server-app.production" description="compile module server-app; test classes" unless="skip.tests"/>
  
  <target name="clean.module.server-app" description="cleanup module">
    <delete dir="${server-app.output.dir}"/>
    <delete dir="${server-app.testoutput.dir}"/>
  </target>
  
  
  <!-- Module DolphinPiApp -->
  
  <dirname property="module.dolphinpiapp.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.dolphinpiapp" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.dolphinpiapp" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.dolphinpiapp" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.dolphinpiapp" value="${compiler.args}"/>
  
  <property name="dolphinpiapp.output.dir" value="${module.dolphinpiapp.basedir}/classes/production/DolphinPiApp"/>
  <property name="dolphinpiapp.testoutput.dir" value="${module.dolphinpiapp.basedir}/classes/test/DolphinPiApp"/>
  
  <path id="dolphinpiapp.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="dolphinpiapp.module.production.classpath">
    <path refid="${module.jdk.classpath.dolphinpiapp}"/>
    <pathelement location="${combined.output.dir}"/>
    <pathelement location="${client.output.dir}"/>
    <path refid="library.jfxtras-labs.classpath"/>
    <path refid="library.jfxrt.classpath"/>
    <path refid="library.swing-layout-1.0.4.classpath"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.httpcore-4.2.1.classpath"/>
    <path refid="library.httpclient-4.2.1.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.miglayout-javafx-4.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.miglayout-core-4.2.classpath"/>
    <path refid="library.groovyfx-0.2.classpath"/>
    <path refid="library.dolphin-client-0.7.classpath"/>
    <path refid="library.dolphin-client-javafx-0.7.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.commons-logging-1.1.1.classpath"/>
    <path refid="library.commons-codec-1.6.classpath"/>
    <path refid="library.asm-3.3.1.classpath"/>
    <pathelement location="${server.output.dir}"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
    <path refid="library.dolphin-combined-0.7.classpath"/>
  </path>
  
  <path id="dolphinpiapp.runtime.production.module.classpath">
    <pathelement location="${dolphinpiapp.output.dir}"/>
    <path refid="combined.runtime.production.module.classpath"/>
  </path>
  
  <path id="dolphinpiapp.module.classpath">
    <path refid="${module.jdk.classpath.dolphinpiapp}"/>
    <pathelement location="${dolphinpiapp.output.dir}"/>
    <pathelement location="${combined.testoutput.dir}"/>
    <pathelement location="${combined.output.dir}"/>
    <pathelement location="${client.testoutput.dir}"/>
    <pathelement location="${client.output.dir}"/>
    <path refid="library.jfxtras-labs.classpath"/>
    <path refid="library.jfxrt.classpath"/>
    <path refid="library.swing-layout-1.0.4.classpath"/>
    <pathelement location="${shared.testoutput.dir}"/>
    <pathelement location="${shared.output.dir}"/>
    <path refid="library.groovy-all-2.1.2.classpath"/>
    <path refid="library.httpcore-4.2.1.classpath"/>
    <path refid="library.httpclient-4.2.1.classpath"/>
    <path refid="library.gpars-1.0.0.classpath"/>
    <path refid="library.miglayout-javafx-4.2.classpath"/>
    <path refid="library.dolphin-shared-0.7.classpath"/>
    <path refid="library.miglayout-core-4.2.classpath"/>
    <path refid="library.groovyfx-0.2.classpath"/>
    <path refid="library.dolphin-client-0.7.classpath"/>
    <path refid="library.dolphin-client-javafx-0.7.classpath"/>
    <path refid="library.jsr166y-1.7.0.classpath"/>
    <path refid="library.commons-logging-1.1.1.classpath"/>
    <path refid="library.commons-codec-1.6.classpath"/>
    <path refid="library.asm-3.3.1.classpath"/>
    <pathelement location="${server.testoutput.dir}"/>
    <pathelement location="${server.output.dir}"/>
    <path refid="library.servlet-api-2.5.classpath"/>
    <path refid="library.dolphin-server-0.7.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.junit-4.11.classpath"/>
    <path refid="library.dolphin-combined-0.7.classpath"/>
  </path>
  
  <path id="dolphinpiapp.runtime.module.classpath">
    <pathelement location="${dolphinpiapp.testoutput.dir}"/>
    <pathelement location="${dolphinpiapp.output.dir}"/>
    <path refid="combined.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.dolphinpiapp">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.dolphinpiapp">
    <patternset refid="excluded.from.module.dolphinpiapp"/>
  </patternset>
  
  
  <target name="compile.module.dolphinpiapp" depends="compile.module.dolphinpiapp.production,compile.module.dolphinpiapp.tests" description="Compile module DolphinPiApp"/>
  
  <target name="compile.module.dolphinpiapp.production" depends="register.custom.compilers,compile.module.combined" description="Compile module DolphinPiApp; production classes"/>
  
  <target name="compile.module.dolphinpiapp.tests" depends="register.custom.compilers,compile.module.dolphinpiapp.production" description="compile module DolphinPiApp; test classes" unless="skip.tests"/>
  
  <target name="clean.module.dolphinpiapp" description="cleanup module">
    <delete dir="${dolphinpiapp.output.dir}"/>
    <delete dir="${dolphinpiapp.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.shared, clean.module.client, clean.module.server, clean.module.combined, clean.module.server-app, clean.module.dolphinpiapp, clean.artifact.javafxapp" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.shared, compile.module.client, compile.module.server, compile.module.combined, compile.module.server-app, compile.module.dolphinpiapp" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.javafxapp" value="${basedir}/out/artifacts/JavaFXApp"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="artifact.temp.output.JavaFXApp" value="${artifacts.temp.dir}/JavaFXApp.jar"/>
    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${jdk.home.1.7}/lib/ant-javafx.jar"/>
  </target>
  
  <target name="clean.artifact.javafxapp" description="clean JavaFXApp artifact output">
    <delete dir="${artifact.output.javafxapp}"/>
  </target>
  
  <target name="artifact.javafxapp" depends="init.artifacts" description="Build &#39;JavaFXApp&#39; artifact" xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <mkdir dir="${artifact.output.javafxapp}"/>
    <copy todir="${artifact.temp.output.JavaFXApp}">
      <fileset dir="${dolphin_train_station.output.dir}"/>
    </copy>
    <fx:fileset id="all_but_JavaFXApp" dir="${artifact.temp.output.JavaFXApp}" includes="**/*.jar">
      <exclude name="JavaFXApp.jar"/>
    </fx:fileset>
    <fx:fileset id="all_JavaFXApp" dir="${artifact.temp.output.JavaFXApp}" includes="**/*.jar"/>
    <fx:application id="JavaFXApp_id" name="JavaFXApp" mainClass="sample.Main"/>
    <fx:jar destfile="${artifact.temp.output.JavaFXApp}\JavaFXApp.jar">
      <fx:application refid="JavaFXApp_id"/>
      <fileset dir="${artifact.temp.output.JavaFXApp}" excludes="**/*.jar"/>
      <fx:resources>
        <fx:fileset refid="all_but_JavaFXApp"/>
      </fx:resources>
    </fx:jar>
    <fx:deploy width="600" height="400" updatemode="background" outdir="${artifact.temp.output.JavaFXApp}\deploy" outfile="JavaFXApp">
      <fx:application refid="JavaFXApp_id"/>
      <fx:resources>
        <fx:fileset refid="all_JavaFXApp"/>
      </fx:resources>
    </fx:deploy>
    <copy todir="${artifact.output.javafxapp}">
      <fileset dir="${artifact.temp.output.JavaFXApp}/deploy"/>
    </copy>
    <delete includeemptydirs="true">
      <fileset dir="${artifact.temp.output.JavaFXApp}"/>
    </delete>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.javafxapp" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>